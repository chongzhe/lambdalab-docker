version: '2'
services:
  tools:
    image: "${REGISTRY}lambdalab/tools:${VERSION}"
    container_name: 'tools'
    volumes:
      - /lambda_home/
      - ./android-sdk-linux:/lambda_home/tools/android-sdk
  db:
    image: '${REGISTRY}library/mongo:3.2'
    entrypoint:
      - mongod
      - --dbpath
      - /data/db
      - --logpath
      - /logs/mongo.log
      - --httpinterface
      - --rest
      - --setParameter
      - failIndexKeyTooLong=false
    volumes:
      - ./data/mongodb/db:/data/db
      - ./logs/mongodb:/logs
    ports:
      - 27017:27017 # TODO hide this port in the future
      - 28017:28017
  redis: # TODO mount redis disk volume
    image: '${REGISTRY}library/redis:3.2'
    command:
      - --bind 0.0.0.0
  elasticsearch:
    image: '${REGISTRY}lambdalab/elasticsearch:${VERSION}'
    volumes:
      - ./data/elasticsearch:/lambda_home/data/elasticsearch
      - ./configs:/lambda_home/configs
      - ./logs/elasticsearch:/lambda_home/data/logs
    ports:
      - 9200:9200
      - 9300:9300
  jenkins:
    image: '${REGISTRY}lambdalab/jenkins:0.2'
    environment:
      - TOOLS_MOUNT=--volumes-from=tools
      - HOST_JOBS=${PWD}/data/jenkins_home/jobs
    volumes:
      - ./data/jenkins_home/jobs:/var/jenkins_home/jobs
      - /var/run/docker.sock:/var/run/docker.sock
    volumes_from:
      - tools
    ports:
      - 8080:8080
      - 50000:50000
    depends_on:
      - build_env
  dataservice:
    image: '${REGISTRY}lambdalab/dataservice:${VERSION}'
    volumes:
      - ./data/projects:/lambda_home/data/projects
      - ./logs:/lambda_home/logs
      - ./configs:/lambda_home/configs
  projectservice:
    image: '${REGISTRY}lambdalab/projectservice:${VERSION}'
    environment:
      - JAVA_OPTS=-Dvars.jenkins.dockerImage=local/build_environment
    volumes:
      - ./data/projects:/lambda_home/data/projects
      - ./logs:/lambda_home/logs
      - ./configs:/lambda_home/configs
      - ~/.ssh:/root/.ssh
  liaceservice:
    image: '${REGISTRY}lambdalab/liaceservice:${VERSION}'
    volumes:
      - ./configs:/lambda_home/configs
      - ./logs:/lambda_home/logs
  metadataservice:
    image: '${REGISTRY}lambdalab/metadataservice:${VERSION}'
    volumes:
      - ./configs:/lambda_home/configs
      - ./logs:/lambda_home/logs
    ports:
      - 10060:10060
  pygments:
    image: '${REGISTRY}lambdalab/pygments:${VERSION}'
    volumes:
      - ./configs:/lambda_home/configs
      - ./logs:/lambda_home/logs
  codatlas:
    image: '${REGISTRY}lambdalab/codatlas:${VERSION}'
    volumes:
      - ./configs:/lambda_home/configs
      - ./logs:/lambda_home/logs
      - ./certs:/lambda_home/certs
    ports:
      - 9000:9000
  nginx:
    image: '${REGISTRY}library/nginx:1.10'
    depends_on:
      - codatlas
    ports:
      - 80:80
    volumes:
      - ./sites-available:/etc/nginx/conf.d
      - ./docs:/lambda_home/docs
      - ./plugins:/lambda_home/plugins
  build_env:
    build:
      context: ./build_environment/${REGISTRY}
    image: local/build_environment

